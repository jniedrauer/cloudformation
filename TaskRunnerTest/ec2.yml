---
AWSTemplateFormatVersion: 2010-09-09

Description: >
  Task Runner test EC2 instances

Resources:

  Ec2Instance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - defaults
            - taskrunner
        defaults:
          files:
            /tmp/cfn-init-default.sh:
              source: !Join
                - "/"
                - - https://s3.amazonaws.com
                  - !Ref CfnBucket
                  - provisioners/cfn-init-default.sh
              mode: "000700"
              owner: "root"
              group: "root"
          commands:
            1_execute:
              command: !Join
                - ' '
                - - /tmp/cfn-init-default.sh
                  - !Join ['.', [!Ref Name, !Select [1, !Ref ZoneInfo]]]
                  - !Sub "'${Ec2Users}'"
        taskrunner:
          files:
            /usr/local/lib/task-runner/TaskRunner-1.0.jar:
              source: https://s3.amazonaws.com/datapipeline-us-east-1/us-east-1/software/latest/TaskRunner/TaskRunner-1.0.jar
              mode: "000644"
              owner: "root"
              group: "root"
            /etc/systemd/system/task-runner.service:
              content: !Sub |
                [Unit]
                Description=AWS Task Runner
                After=NetworkManager.service network.service

                [Service]
                ExecStart=/usr/bin/java -jar /usr/local/lib/task-runner/TaskRunner-1.0.jar \
                    --output /var/log/task-runner \
                    --workerGroup ${WorkerGroup} \
                    --region us-east-1
              mode: "000644"
              owner: "root"
              group: "root"
          commands:
            1_install:
              command: yum -y install java-1.8.0-openjdk
            2_enable:
              command: systemctl enable task-runner
            3_start:
              command: systemctl start task-runner
      AWS::CloudFormation::Authentication:
        S3AccessCredentials:
          buckets: !Ref CfnBucket
          type: S3
          accessKeyId: !Select
            - 0
            - !Ref Ec2ProvisionKeys
          secretKey: !Select
            - 1
            - !Ref Ec2ProvisionKeys
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT5M
    Properties:
      SubnetId: !Ref Subnet
      ImageId: !Ref Ami
      InstanceType: !Ref InstanceType
      UserData:
        "Fn::Base64": !Sub |
          #!/bin/bash -x
          export PATH=$PATH:/opt/aws/bin
          cfn-init -v \
              --stack ${AWS::StackName} \
              --resource Ec2Instance \
              --region ${AWS::Region}
          cfn-signal -e $? \
              --stack ${AWS::StackName} \
              --resource Ec2Instance \
              --region ${AWS::Region}
      SecurityGroupIds:
        - !Ref SecurityGroup
      IamInstanceProfile: !Ref IamInstanceProfile
      Tags:
        - Key: Name
          Value: !Join ['.', [!Ref Name, !Select [1, !Ref ZoneInfo]]]
        - Key: Group
          Value: !Ref Group

Parameters:
  Name:
    Type: String
  Group:
    Type: String
  WorkerGroup:
    Type: String
  Ami:
    Type: String
  InstanceType:
    Type: String
    Default: t2.nano
  SecurityGroup:
    Type: String
  IamInstanceProfile:
    Type: String
  Subnet:
    Type: String
  CfnBucket:
    Type: String
  Ec2ProvisionKeys:
    Type: AWS::SSM::Parameter::Value<List<String>>
    Default: Ec2ProvisionIamKeypair
    NoEcho: true
  Ec2Users:
    Type: AWS::SSM::Parameter::Value<String>
    Default: Ec2Users
    NoEcho: true
  ZoneInfo:
    Type: AWS::SSM::Parameter::Value<List<String>>
    Default: TestingVpcZoneInfo
